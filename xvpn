#!/bin/bash

#  Menu for ExpressVPN with Tray Icon v1.2  github.com/powerhousepro69/xvpn

#     Requirements:  - Expressvpn CLI App  <expressvpn>
#                    - Included python script   [vpn_notificaton.py]   

#       **********   Put  vpn_notificaton.py  in   ~/.config   **********

#  Note : you can shutdown expressvpn from the tray icon.


#     Put  xvpn  file wherever you want.
#     To enable execute bit:

#    - Open Terminal
#    - Switch to the directory that  xvpn  is in.
#    - Enable execute bit type..    chmod +x xvpn 

# If this file isn't in the path and you are in the directory it is in   ./xvpn   to run 
# If the file is located in your path:      enter...       xvpn    to run

provider_cli=expressvpn

function status {
	clear
	echo
	echo
	$provider_cli status
        echo -en "\n\n\t\t\tHit any key to continue"
	read -n 1 line
}

function lastconnect {
	clear
    	echo
	echo
	$provider_cli connect
}

function disconnect {
	clear
	echo
	echo
	$provider_cli disconnect
	notify-send 'VPN Tray Icon - SHUTDOWN'
}

function pref {
        clear
        echo
	echo        
	$provider_cli preferences
	echo -en "\n\n\t\t\tHit any key to continue"
	read -n 1 line
}

function nlockon {
        clear
        echo
	echo 
	$provider_cli preferences set network_lock on
	echo -en "\n\n\t\t\tHit any key to continue"
	read -n 1 line
}

function las {
        clear
        echo
	echo 
	$provider_cli list all
	echo 
	echo
	echo "  Scroll up with mouse to find what server you want. (server code on far left)"
	echo "  Scroll back down and enter server code."
	echo 
	echo "  If you do not enter anything, your last connection will be used. "
	echo 
	read -p "  Enter Sever Code and Press ENTER :  " svrcode 
        $provider_cli connect $svrcode
        read -p "  Press  ENTER to continue . . ." 
}

function vernum {
        clear
        echo
	echo 
	$provider_cli -v
	echo -en "\n\n\t\t\tHit any key to continue"
	read -n 1 line
}

function nlockoff {
        clear
        echo
	echo 
	$provider_cli preferences set network_lock off 
	echo -en "\n\n\t\t\tHit any key to continue"
	read -n 1 line
}

function enteract {
        clear
        echo 
	echo  
	echo "  Enter or Paste your Activation Code Below"
	echo "  Then Press ENTER"
        echo  
	echo 
    # read -p "   Activation Code:  " ac 
        $provider_cli activate $ac 
}

function svrconnect {
         clear -x    # (keeps history)
         echo
         echo
         $provider_cli connect "$1"
}


function menu {
clear
echo
echo -e "\033[97;1;100m           xvpn for ExpressVPN with Tray Icon           \033[0m"
echo "     ______________________________________________ "
echo "    |                                              |"
echo "    | 1. Status             6. Enable Net Lock     |"
echo "    | 2. Connect to Last    7. List All Servers    |"    
echo "    | 3. Smart Connect      8. Version Number      |"
echo "    | 4. Disconnect         !. Disable Net Lock    |"
echo "    | 5. Preferences        $. Enter Activation    |"
echo "    |_____________________ ________________________|"
echo -e "    |\033[97;100m        USA          \033[0m \033[97;100m         Other          \033[0m|"
echo "    |                                              |"	
echo "    | a. Dallas             h. Amsterdam - NL      |"
echo "    | b. Los Angeles        i. Belgium             |"
echo "    | c. Los Angeles 2      j. East London - UK    |"
echo "    | d. New York           k. Frankfurt - Germany |"
echo "    | e. San Francisco      l. Hong Kong 2         |"
echo "    | f. Seattle            m. Milan - Italy       |"	
echo "    | g. Washington DC      n. Paris 1 - France    |"
echo "    |_____________________  o. Switzerland 2       |"
echo -e "    |\033[94;100m 0. Quit xvpn        \033[0m  p. Toronto - Canada    |"
echo "    |______________________________________________|"



#     Code from Lines 158-174 perform the following 4 tasks. 
#          The 1st <if> checks for a vpn tunnel.   The 2nd <if> checks if tray icon is running.

#      1. - A check is made to see if a VPN tunnel is Active. <line 158>
#      2. - If a VPN tunnel is Active and tray icon is already running..... message shown. <line 162-163> 
#      3. - If a VPN tunnel is Active and tray icon isn't running..... tray icon is loaded and messages shown. <lines 165-168>
#      4. - If NO VPN tunnel exists..... tray icon process is killed and message shown. <lines 171-173>

#######################################################################################
if ifconfig tun0 2>/dev/null | grep -q "00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00"
then
	if pgrep -af 'python3 /home/'$USER'/.config/vpn_notification.py' >/dev/null
        then
    		echo
    		echo -e "        ExpressVPN and Tray Icon - \033[93;1;100m ACTIVE \033[0m"
	else
		nohup python3 ~/.config/vpn_notification.py &> /dev/null &
		notify-send 'VPN Tray Icon - LOADED'
		echo
		echo -e "        ExpressVPN and Tray Icon - \033[93;1;100m ACTIVE \033[0m"	
        fi
else
  	killall -q python3 ~/.config/vpn_notification.py
	echo
	echo -e "        ExpressVPN and Tray Icon - \033[31;1;5;100m SHUTDOWN \033[0m"
	fi
#######################################################################################
	
echo -en "\tEnter an Option: "
read -n 1 option
}


while [ 1 ]
do
	menu
	case $option in
	0)
	break ;;
	1)
	status ;;

	2)
	lastconnect ;;

	3)
	svrconnect "smart" ;;
	
	4)
	disconnect ;;

	5)
	pref ;;

	6)
	nlockon ;;

	7)
	las ;;

	8)
	vernum ;;

	!)
	nlockoff ;;

	$)
	enteract ;;

	a)
	svrconnect "usda" ;;

	b)
	svrconnect "usla" ;;

	c)
	svrconnect "usla2" ;;

	d)
	svrconnect "usny" ;;

	e)
	svrconnect "ussf" ;;

	f)
	svrconnect "usse" ;;

	g)
	svrconnect "uswd" ;;

	h)
	svrconnect "nlam" ;;

	i)
	svrconnect "be" ;;

	j)
	svrconnect "ukel" ;;

	k)
	svrconnect "defr1" ;;

	l)
	svrconnect "hk2" ;;

	m)
	svrconnect "itmi" ;;

	n)
	svrconnect "frpa1" ;;

	o)
	svrconnect "ch2" ;;

	p)
	svrconnect "cato" ;;


	*)
	clear
	echo ""
	echo ""
	echo ""	
	echo "                        Invalid Selection";;
	esac

 sleep .35

#  Uncomment the 2 lines below to see expressvpn connect messages with pause.

#    echo -en "\n\n\t\t\tHit any key to continue"
#    read -n 1 line

done
clear



